{% extends 'base.html.twig' %}

{% block title %}loCode - Serialize{% endblock %}

{% block javascripts_head %}
    <script src="/ace/src-min-noconflict/ace.js" type="text/javascript" charset="utf-8"></script>
    <script src="/ace/src-min-noconflict/ext-beautify.js" type="text/javascript" charset="utf-8"></script>
    <script src="/ace/src-min-noconflict/mode-php.js" type="text/javascript" charset="utf-8"></script>
    <script>
        var App = {
            localStorageKey: 'locode_php_serialize_left_content',
            editor_right: null,
            init() {
                document.addEventListener('alpine:init', () => {
                    Alpine.data('domTraversal', () => ({
                        currentFileName: 'vhost.conf',
                        submit() {
                            const formData = this.getFormData(this.$event.target);
                            fetch('/api/apache/vhost', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json'
                                },
                                body: JSON.stringify( formData )
                            })
                            .then(response => response.json())
                            .then(data => {
                                if (data.success) {
                                    App.editor_right.setValue(data.formatted, -1);
                                    this.currentFileName = data.filename;
                                } else {
                                    alert(data.message);
                                }
                            })
                            .catch(error => {
                                alert('Error: ' + error.message);
                            });
                        },
                        getFormData(form) {
                            let data = {};
                            new FormData(form).forEach((value, key) => {
                                if (data[key]) {
                                    if (Array.isArray(data[key])) {
                                        data[key].push(value);
                                    } else {
                                        data[key] = [data[key], value];
                                    }
                                } else {
                                    data[key] = value;
                                }
                            });
                            return data;
                        },
                    }));
                });
                document.addEventListener('DOMContentLoaded', () => {
                    this.initAce();
                });
            },
            initAce() {
                this.editor_right = ace.edit("editor_right");
                this.editor_right.setTheme("ace/theme/monokai");
                this.editor_right.session.setMode("ace/mode/php");

                const editor_right = document.getElementById("editor_right");
                new ResizeObserver(() => {
                    this.editor_right.resize();
                }).observe(editor_right);
            }
        }
        App.init();
    </script>
{% endblock %} 
{% block stylesheets_head %}
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-icons/1.11.3/font/bootstrap-icons.min.css" rel="stylesheet">
{% endblock %}
{% block offcanvas %}
<div class="offcanvas offcanvas-start" tabindex="-1" id="appHelp" aria-labelledby="offcanvasLabel">
  <div class="offcanvas-header">
    <h5 class="offcanvas-title" id="offcanvasLabel">Help</h5>
    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
  </div>
  <div class="offcanvas-body">
    <h2>Virtual Host</h2>
    <p>To create a virtual host, fill in the form with the server name, server alias (if any), and document root. The server name is the domain name that will be used to access the site. The server alias is an optional field that allows you to specify additional names that should point to the same site. The document root is the directory where the site's files are located.</p>
  </div>
</div>
{% endblock %}
{% block body %}
<div class="container-fluid">
    <div class="row">
        <h1>{{ title }} <a class="btn btn-dark" data-bs-toggle="offcanvas" href="#appHelp" role="button" aria-controls="appHelp" title="Help"><i class="bi bi-person-raised-hand"></i></a></h1>
    </div>
    <div class="row justify-content-start" x-data="domTraversal">
        <div class="col-2">
            <form class="row g-3" id="vhostGeneratorForm" @submit.prevent="submit()">
                <div class="col-12">
                    <label for="inputServerName" class="form-label">Server Name</label>
                    <input type="text" name="serverName" class="form-control" id="inputServerName" placeholder="locode.app" value="locode.app">
                </div>
                <div class="col-12" x-data="{ openServerAlias: false }">
                    <div class="form-check">
                        <input class="form-check-input" x-on:click="openServerAlias = ! openServerAlias" name="preferences" value="serverAlias" type="checkbox" id="inputAlias">
                        <label class="form-check-label" for="inputServerAlias">
                            Server Alias
                        </label>
                    </div>
                    <div x-show="openServerAlias">
                        <input type="text" name="serverAlias" class="form-control" id="inputServerAlias" placeholder="www.locode.app locode.org locode.info" value="www.locode.app">
                    </div>
                </div>
                <div class="col-12">
                    <label for="inputDocumentRoot" class="form-label">Document Root</label>
                    <input type="text" name="documentRoot" class="form-control" id="inputDocumentRoot" placeholder="/var/www/html" value="/var/www/html">
                </div>
                <div class="col-12">
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="preferences" value="http" id="inputHttp" checked>
                        <label class="form-check-label" for="inputUppercase">
                            HTTP
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" name="preferences" value="https" id="inputHttps" checked>
                        <label class="form-check-label" for="inputLowercase">
                            HTTPS
                        </label>
                    </div>
                </div>
                <div class="col-12">
                    <button type="submit" class="btn btn-dark">Generate</button>
                </div>
            </form>
        </div>
        <div class="col-10">
            <div class="ace-toolbar">
                <button @click="AceToolbar.toggleFullScreen('editor_right')" class="btn btn-sm btn-outline-secondary" title="Toggle Fullscreen">
                    <i class="bi bi-arrows-fullscreen"></i>
                </button>
                <button @click="AceToolbar.copyToClipboard('editor_right')" class="btn btn-sm btn-outline-secondary" title="Copy to clipboard">
                    <i class="bi bi-copy"></i>
                </button>
                <div class="d-inline-block">
                    <input type="text" class="form-control form-control-sm" x-model="currentFileName">
                </div>
            </div>
            <div class="ace-editor" id="editor_right"></div>
        </div>
    </div>
</div>
{% endblock %}
